{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utils = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst OutModeDirection_1 = require(\"../Enums/Directions/OutModeDirection\");\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nclass Utils {\n  static isSsr() {\n    return typeof window === \"undefined\" || !window;\n  }\n\n  static get animate() {\n    return Utils.isSsr() ? callback => setTimeout(callback) : callback => (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || window.setTimeout)(callback);\n  }\n\n  static get cancelAnimation() {\n    return Utils.isSsr() ? handle => clearTimeout(handle) : handle => (window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.clearTimeout)(handle);\n  }\n\n  static isInArray(value, array) {\n    return value === array || array instanceof Array && array.indexOf(value) > -1;\n  }\n\n  static loadFont(character) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      try {\n        yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n      } catch (_a) {}\n    });\n  }\n\n  static arrayRandomIndex(array) {\n    return Math.floor(Math.random() * array.length);\n  }\n\n  static itemFromArray(array, index, useIndex = true) {\n    const fixedIndex = index !== undefined && useIndex ? index % array.length : Utils.arrayRandomIndex(array);\n    return array[fixedIndex];\n  }\n\n  static isPointInside(point, size, radius, direction) {\n    return Utils.areBoundsInside(Utils.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n  }\n\n  static areBoundsInside(bounds, size, direction) {\n    let inside = true;\n\n    if (!direction || direction === OutModeDirection_1.OutModeDirection.bottom) {\n      inside = bounds.top < size.height;\n    }\n\n    if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.left)) {\n      inside = bounds.right > 0;\n    }\n\n    if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.right)) {\n      inside = bounds.left < size.width;\n    }\n\n    if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.top)) {\n      inside = bounds.bottom > 0;\n    }\n\n    return inside;\n  }\n\n  static calculateBounds(point, radius) {\n    return {\n      bottom: point.y + radius,\n      left: point.x - radius,\n      right: point.x + radius,\n      top: point.y - radius\n    };\n  }\n\n  static loadImage(source) {\n    return new Promise((resolve, reject) => {\n      if (!source) {\n        reject(\"Error tsParticles - No image.src\");\n        return;\n      }\n\n      const image = {\n        source: source,\n        type: source.substr(source.length - 3)\n      };\n      const img = new Image();\n      img.addEventListener(\"load\", () => {\n        image.element = img;\n        resolve(image);\n      });\n      img.addEventListener(\"error\", () => {\n        reject(`Error tsParticles - loading image: ${source}`);\n      });\n      img.src = source;\n    });\n  }\n\n  static downloadSvgImage(source) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (!source) {\n        throw new Error(\"Error tsParticles - No image.src\");\n      }\n\n      const image = {\n        source: source,\n        type: source.substr(source.length - 3)\n      };\n\n      if (image.type !== \"svg\") {\n        return Utils.loadImage(source);\n      }\n\n      const response = yield fetch(image.source);\n\n      if (!response.ok) {\n        throw new Error(\"Error tsParticles - Image not found\");\n      }\n\n      image.svgData = yield response.text();\n      return image;\n    });\n  }\n\n  static deepExtend(destination, ...sources) {\n    for (const source of sources) {\n      if (source === undefined || source === null) {\n        continue;\n      }\n\n      if (typeof source !== \"object\") {\n        destination = source;\n        continue;\n      }\n\n      const sourceIsArray = Array.isArray(source);\n\n      if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n        destination = [];\n      } else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n        destination = {};\n      }\n\n      for (const key in source) {\n        if (key === \"__proto__\") {\n          continue;\n        }\n\n        const sourceDict = source;\n        const value = sourceDict[key];\n        const isObject = typeof value === \"object\";\n        const destDict = destination;\n        destDict[key] = isObject && Array.isArray(value) ? value.map(v => Utils.deepExtend(destDict[key], v)) : Utils.deepExtend(destDict[key], value);\n      }\n    }\n\n    return destination;\n  }\n\n  static isDivModeEnabled(mode, divs) {\n    return divs instanceof Array ? !!divs.find(t => t.enable && Utils.isInArray(mode, t.mode)) : Utils.isInArray(mode, divs.mode);\n  }\n\n  static divModeExecute(mode, divs, callback) {\n    if (divs instanceof Array) {\n      for (const div of divs) {\n        const divMode = div.mode;\n        const divEnabled = div.enable;\n\n        if (divEnabled && Utils.isInArray(mode, divMode)) {\n          Utils.singleDivModeExecute(div, callback);\n        }\n      }\n    } else {\n      const divMode = divs.mode;\n      const divEnabled = divs.enable;\n\n      if (divEnabled && Utils.isInArray(mode, divMode)) {\n        Utils.singleDivModeExecute(divs, callback);\n      }\n    }\n  }\n\n  static singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n\n    if (selectors instanceof Array) {\n      for (const selector of selectors) {\n        callback(selector, div);\n      }\n    } else {\n      callback(selectors, div);\n    }\n  }\n\n  static divMode(divs, element) {\n    if (!element || !divs) {\n      return;\n    }\n\n    if (divs instanceof Array) {\n      return divs.find(d => Utils.checkSelector(element, d.selectors));\n    } else if (Utils.checkSelector(element, divs.selectors)) {\n      return divs;\n    }\n  }\n\n  static circleBounceDataFromParticle(p) {\n    return {\n      position: p.getPosition(),\n      radius: p.getRadius(),\n      velocity: p.velocity,\n      factor: {\n        horizontal: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.horizontal),\n        vertical: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.vertical)\n      }\n    };\n  }\n\n  static circleBounce(p1, p2) {\n    const xVelocityDiff = p1.velocity.horizontal;\n    const yVelocityDiff = p1.velocity.vertical;\n    const pos1 = p1.position;\n    const pos2 = p2.position;\n    const xDist = pos2.x - pos1.x;\n    const yDist = pos2.y - pos1.y;\n\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n      const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n      const m1 = p1.radius;\n      const m2 = p2.radius;\n      const u1 = NumberUtils_1.NumberUtils.rotateVelocity(p1.velocity, angle);\n      const u2 = NumberUtils_1.NumberUtils.rotateVelocity(p2.velocity, angle);\n      const v1 = NumberUtils_1.NumberUtils.collisionVelocity(u1, u2, m1, m2);\n      const v2 = NumberUtils_1.NumberUtils.collisionVelocity(u2, u1, m1, m2);\n      const vFinal1 = NumberUtils_1.NumberUtils.rotateVelocity(v1, -angle);\n      const vFinal2 = NumberUtils_1.NumberUtils.rotateVelocity(v2, -angle);\n      p1.velocity.horizontal = vFinal1.horizontal * p1.factor.horizontal;\n      p1.velocity.vertical = vFinal1.vertical * p1.factor.vertical;\n      p2.velocity.horizontal = vFinal2.horizontal * p2.factor.horizontal;\n      p2.velocity.vertical = vFinal2.vertical * p2.factor.vertical;\n    }\n  }\n\n  static rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition();\n    const size = particle.getRadius();\n    const bounds = Utils.calculateBounds(pPos, size);\n    const resH = Utils.rectSideBounce({\n      min: bounds.left,\n      max: bounds.right\n    }, {\n      min: bounds.top,\n      max: bounds.bottom\n    }, {\n      min: divBounds.left,\n      max: divBounds.right\n    }, {\n      min: divBounds.top,\n      max: divBounds.bottom\n    }, particle.velocity.horizontal, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.horizontal));\n\n    if (resH.bounced) {\n      if (resH.velocity !== undefined) {\n        particle.velocity.horizontal = resH.velocity;\n      }\n\n      if (resH.position !== undefined) {\n        particle.position.x = resH.position;\n      }\n    }\n\n    const resV = Utils.rectSideBounce({\n      min: bounds.top,\n      max: bounds.bottom\n    }, {\n      min: bounds.left,\n      max: bounds.right\n    }, {\n      min: divBounds.top,\n      max: divBounds.bottom\n    }, {\n      min: divBounds.left,\n      max: divBounds.right\n    }, particle.velocity.vertical, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.vertical));\n\n    if (resV.bounced) {\n      if (resV.velocity !== undefined) {\n        particle.velocity.vertical = resV.velocity;\n      }\n\n      if (resV.position !== undefined) {\n        particle.position.y = resV.position;\n      }\n    }\n  }\n\n  static rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = {\n      bounced: false\n    };\n\n    if (pOtherSide.min >= rectOtherSide.min && pOtherSide.min <= rectOtherSide.max && pOtherSide.max >= rectOtherSide.min && pOtherSide.max <= rectOtherSide.max) {\n      if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0 || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n      }\n    }\n\n    return res;\n  }\n\n  static checkSelector(element, selectors) {\n    if (selectors instanceof Array) {\n      for (const selector of selectors) {\n        if (element.matches(selector)) {\n          return true;\n        }\n      }\n\n      return false;\n    } else {\n      return element.matches(selectors);\n    }\n  }\n\n}\n\nexports.Utils = Utils;","map":{"version":3,"sources":["/home/yuvi/Desktop/recruit/frontend/node_modules/tsparticles/dist/Utils/Utils.js"],"names":["Object","defineProperty","exports","value","Utils","tslib_1","require","OutModeDirection_1","NumberUtils_1","isSsr","window","animate","callback","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimation","handle","clearTimeout","cancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","isInArray","array","Array","indexOf","loadFont","character","__awaiter","document","fonts","load","weight","font","_a","arrayRandomIndex","Math","floor","random","length","itemFromArray","index","useIndex","fixedIndex","undefined","isPointInside","point","size","radius","direction","areBoundsInside","calculateBounds","bounds","inside","OutModeDirection","bottom","top","height","left","right","width","y","x","loadImage","source","Promise","resolve","reject","image","type","substr","img","Image","addEventListener","element","src","downloadSvgImage","Error","response","fetch","ok","svgData","text","deepExtend","destination","sources","sourceIsArray","isArray","key","sourceDict","isObject","destDict","map","v","isDivModeEnabled","mode","divs","find","t","enable","divModeExecute","div","divMode","divEnabled","singleDivModeExecute","selectors","selector","d","checkSelector","circleBounceDataFromParticle","p","position","getPosition","getRadius","velocity","factor","horizontal","NumberUtils","getValue","particlesOptions","bounce","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","angle","atan2","m1","m2","u1","rotateVelocity","u2","v1","collisionVelocity","v2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","resH","rectSideBounce","min","max","bounced","resV","pSide","pOtherSide","rectSide","rectOtherSide","res","matches"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nconst tslib_1 = require(\"tslib\");\nconst OutModeDirection_1 = require(\"../Enums/Directions/OutModeDirection\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nclass Utils {\n    static isSsr() {\n        return typeof window === \"undefined\" || !window;\n    }\n    static get animate() {\n        return Utils.isSsr()\n            ? (callback) => setTimeout(callback)\n            : (callback) => (window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.setTimeout)(callback);\n    }\n    static get cancelAnimation() {\n        return Utils.isSsr()\n            ? (handle) => clearTimeout(handle)\n            : (handle) => (window.cancelAnimationFrame ||\n                window.webkitCancelRequestAnimationFrame ||\n                window.mozCancelRequestAnimationFrame ||\n                window.oCancelRequestAnimationFrame ||\n                window.msCancelRequestAnimationFrame ||\n                window.clearTimeout)(handle);\n    }\n    static isInArray(value, array) {\n        return value === array || (array instanceof Array && array.indexOf(value) > -1);\n    }\n    static loadFont(character) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index, useIndex = true) {\n        const fixedIndex = index !== undefined && useIndex ? index % array.length : Utils.arrayRandomIndex(array);\n        return array[fixedIndex];\n    }\n    static isPointInside(point, size, radius, direction) {\n        return Utils.areBoundsInside(Utils.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n    }\n    static areBoundsInside(bounds, size, direction) {\n        let inside = true;\n        if (!direction || direction === OutModeDirection_1.OutModeDirection.bottom) {\n            inside = bounds.top < size.height;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.left)) {\n            inside = bounds.right > 0;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.right)) {\n            inside = bounds.left < size.width;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.top)) {\n            inside = bounds.bottom > 0;\n        }\n        return inside;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n    static loadImage(source) {\n        return new Promise((resolve, reject) => {\n            if (!source) {\n                reject(\"Error tsParticles - No image.src\");\n                return;\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            const img = new Image();\n            img.addEventListener(\"load\", () => {\n                image.element = img;\n                resolve(image);\n            });\n            img.addEventListener(\"error\", () => {\n                reject(`Error tsParticles - loading image: ${source}`);\n            });\n            img.src = source;\n        });\n    }\n    static downloadSvgImage(source) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!source) {\n                throw new Error(\"Error tsParticles - No image.src\");\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            if (image.type !== \"svg\") {\n                return Utils.loadImage(source);\n            }\n            const response = yield fetch(image.source);\n            if (!response.ok) {\n                throw new Error(\"Error tsParticles - Image not found\");\n            }\n            image.svgData = yield response.text();\n            return image;\n        });\n    }\n    static deepExtend(destination, ...sources) {\n        for (const source of sources) {\n            if (source === undefined || source === null) {\n                continue;\n            }\n            if (typeof source !== \"object\") {\n                destination = source;\n                continue;\n            }\n            const sourceIsArray = Array.isArray(source);\n            if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n                destination = [];\n            }\n            else if (!sourceIsArray &&\n                (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n                destination = {};\n            }\n            for (const key in source) {\n                if (key === \"__proto__\") {\n                    continue;\n                }\n                const sourceDict = source;\n                const value = sourceDict[key];\n                const isObject = typeof value === \"object\";\n                const destDict = destination;\n                destDict[key] =\n                    isObject && Array.isArray(value)\n                        ? value.map((v) => Utils.deepExtend(destDict[key], v))\n                        : Utils.deepExtend(destDict[key], value);\n            }\n        }\n        return destination;\n    }\n    static isDivModeEnabled(mode, divs) {\n        return divs instanceof Array\n            ? !!divs.find((t) => t.enable && Utils.isInArray(mode, t.mode))\n            : Utils.isInArray(mode, divs.mode);\n    }\n    static divModeExecute(mode, divs, callback) {\n        if (divs instanceof Array) {\n            for (const div of divs) {\n                const divMode = div.mode;\n                const divEnabled = div.enable;\n                if (divEnabled && Utils.isInArray(mode, divMode)) {\n                    Utils.singleDivModeExecute(div, callback);\n                }\n            }\n        }\n        else {\n            const divMode = divs.mode;\n            const divEnabled = divs.enable;\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n                Utils.singleDivModeExecute(divs, callback);\n            }\n        }\n    }\n    static singleDivModeExecute(div, callback) {\n        const selectors = div.selectors;\n        if (selectors instanceof Array) {\n            for (const selector of selectors) {\n                callback(selector, div);\n            }\n        }\n        else {\n            callback(selectors, div);\n        }\n    }\n    static divMode(divs, element) {\n        if (!element || !divs) {\n            return;\n        }\n        if (divs instanceof Array) {\n            return divs.find((d) => Utils.checkSelector(element, d.selectors));\n        }\n        else if (Utils.checkSelector(element, divs.selectors)) {\n            return divs;\n        }\n    }\n    static circleBounceDataFromParticle(p) {\n        return {\n            position: p.getPosition(),\n            radius: p.getRadius(),\n            velocity: p.velocity,\n            factor: {\n                horizontal: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.horizontal),\n                vertical: NumberUtils_1.NumberUtils.getValue(p.particlesOptions.bounce.vertical),\n            },\n        };\n    }\n    static circleBounce(p1, p2) {\n        const xVelocityDiff = p1.velocity.horizontal;\n        const yVelocityDiff = p1.velocity.vertical;\n        const pos1 = p1.position;\n        const pos2 = p2.position;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.radius;\n            const m2 = p2.radius;\n            const u1 = NumberUtils_1.NumberUtils.rotateVelocity(p1.velocity, angle);\n            const u2 = NumberUtils_1.NumberUtils.rotateVelocity(p2.velocity, angle);\n            const v1 = NumberUtils_1.NumberUtils.collisionVelocity(u1, u2, m1, m2);\n            const v2 = NumberUtils_1.NumberUtils.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = NumberUtils_1.NumberUtils.rotateVelocity(v1, -angle);\n            const vFinal2 = NumberUtils_1.NumberUtils.rotateVelocity(v2, -angle);\n            p1.velocity.horizontal = vFinal1.horizontal * p1.factor.horizontal;\n            p1.velocity.vertical = vFinal1.vertical * p1.factor.vertical;\n            p2.velocity.horizontal = vFinal2.horizontal * p2.factor.horizontal;\n            p2.velocity.vertical = vFinal2.vertical * p2.factor.vertical;\n        }\n    }\n    static rectBounce(particle, divBounds) {\n        const pPos = particle.getPosition();\n        const size = particle.getRadius();\n        const bounds = Utils.calculateBounds(pPos, size);\n        const resH = Utils.rectSideBounce({\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, particle.velocity.horizontal, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.horizontal));\n        if (resH.bounced) {\n            if (resH.velocity !== undefined) {\n                particle.velocity.horizontal = resH.velocity;\n            }\n            if (resH.position !== undefined) {\n                particle.position.x = resH.position;\n            }\n        }\n        const resV = Utils.rectSideBounce({\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, particle.velocity.vertical, NumberUtils_1.NumberUtils.getValue(particle.particlesOptions.bounce.vertical));\n        if (resV.bounced) {\n            if (resV.velocity !== undefined) {\n                particle.velocity.vertical = resV.velocity;\n            }\n            if (resV.position !== undefined) {\n                particle.position.y = resV.position;\n            }\n        }\n    }\n    static rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n        const res = { bounced: false };\n        if (pOtherSide.min >= rectOtherSide.min &&\n            pOtherSide.min <= rectOtherSide.max &&\n            pOtherSide.max >= rectOtherSide.min &&\n            pOtherSide.max <= rectOtherSide.max) {\n            if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n                (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n                res.velocity = velocity * -factor;\n                res.bounced = true;\n            }\n        }\n        return res;\n    }\n    static checkSelector(element, selectors) {\n        if (selectors instanceof Array) {\n            for (const selector of selectors) {\n                if (element.matches(selector)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return element.matches(selectors);\n        }\n    }\n}\nexports.Utils = Utils;\n"]},"metadata":{},"sourceType":"script"}