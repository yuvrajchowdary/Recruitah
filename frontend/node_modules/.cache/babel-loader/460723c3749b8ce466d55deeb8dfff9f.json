{"ast":null,"code":"var _jsxFileName = \"/home/yuvi/Desktop/recruit/frontend/src/screens/SigninScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText } from \"@chakra-ui/core\";\n\nfunction SigninScreen(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userSignin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(\"/\");\n    }\n\n    return () => {//\n    };\n  }, [userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(signin(email, password));\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    \"aria-describedby\": \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, \"We'll never share your email.\"));\n}\n\nexport default SigninScreen;","map":{"version":3,"sources":["/home/yuvi/Desktop/recruit/frontend/src/screens/SigninScreen.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","signin","FormControl","FormLabel","FormErrorMessage","FormHelperText","SigninScreen","props","email","setEmail","password","setPassword","userSignin","state","loading","userInfo","error","dispatch","history","push","submitHandler","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,iBALP;;AAOA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,UAAU,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BJ,UAArC;AACA,QAAMK,QAAQ,GAAGjB,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,QAAJ,EAAc;AACZR,MAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;;AACD,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAPQ,EAON,CAACJ,QAAD,CAPM,CAAT;;AASA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAAChB,MAAM,CAACO,KAAD,EAAQE,QAAR,CAAP,CAAR;AAED,GAJD;;AAKA,sBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADO,eAEP,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,wBAAiB,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,eAGP,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHO,CAAP;AAOD;;AACD,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText\n} from \"@chakra-ui/core\";\n\nfunction SigninScreen(props) {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(\"/\");\n    }\n    return () => {\n      //\n    };\n  }, [userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(signin(email, password));\n\n  }\n  return <FormControl>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input type=\"email\" id=\"email\" aria-describedby=\"email-helper-text\" />\n  <FormHelperText id=\"email-helper-text\">\n    We'll never share your email.\n  </FormHelperText>\n</FormControl>\n}\nexport default SigninScreen; "]},"metadata":{},"sourceType":"module"}